name: CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # test:
  #   ...
  deploy:
    name: "Deploy to EC2"
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Pull changes
        run: |
          ssh staging 'cd /home/ubuntu/PreviaMe && git pull'
      - name: Stop Container
        run: ssh staging 'docker stop previame-container' || true

      - name: Delete container and image
        run: |
          ssh staging 'docker rm previame-container' || true
          ssh staging 'docker rmi previame' || true

      - name: Build image
        run: ssh staging 'cd /home/ubuntu/PreviaMe && docker build -t previame .'

      - name: Set env variables
        run: |
          ssh staging 'export TEST=TEST'
          ssh staging 'export PREVIAME_DB_STRING=${{ secrets.PREVIAME_DB_STRING }}'
          ssh staging 'export PREVIAME_FIREBASE_JSON=${{ secrets.PREVIAME_FIREBASE_JSON }}'
          ssh staging 'export PREVIAME_FIREBASE_KEY=${{ secrets.PREVIAME_FIREBASE_KEY }}'
          ssh staging 'export PREVIAME_FIREBASE_PRIVATE_KEY=${{ secrets.PREVIAME_FIREBASE_PRIVATE_KEY }}'
      - name: Run container
        run:  >
          ssh staging 'docker run -d --name previame-container -p 8000:8000 previame
          -env PREVIAME_DB_STRING=$PREVIAME_DB_STRING
          -env PREVIAME_FIREBASE_JSON=$PREVIAME_FIREBASE_JSON
          -env PREVIAME_FIREBASE_KEY=$PREVIAME_FIREBASE_KEY
          -env PREVIAME_FIREBASE_PRIVATE_KEY=$PREVIAME_FIREBASE_PRIVATE_KEY'